#!/usr/bin/env node

/*

  Isomorphic SmartClient Node.js Server
  Copyright 2018 and beyond Isomorphic Software, Inc. All rights reserved.
  "SmartClient" is a trademark of Isomorphic Software, Inc.

  LICENSE NOTICE
     INSTALLATION OR USE OF THIS SOFTWARE INDICATES YOUR ACCEPTANCE
     OF ISOMORPHIC SOFTWARE LICENSE TERMS. If you have received this file
     without an accompanying Isomorphic Software license file, please
     contact licensing@isomorphic.com for details. Unauthorized copying and
     use of this software is a violation of international copyright law.

  LGPL LICENSE
     This software may be used under the terms of the Lesser GNU Public License (LGPL),
     version 3.0 (see http://www.gnu.org/licenses/lgpl-3.0.html).  The LGPL is generally
     considered a commercial-friendly license, and is used by the Hibernate framework
     among others.  For any questions about the LGPL, please refer to a qualified attorney;
     Isomorphic does not provide legal advice.

  OTHER LICENSE OPTIONS
     Alternative licensing terms, including licenses with no requirement to make modifications
     publicly available, can be arranged by contacting Isomorphic Software by email
     (licensing@isomorphic.com) or web (www.isomorphic.com).

*/

/* global __dirname, Install */

const fs = require("fs-extra");
const util = require("util");
const path = require("path");
const readline = require("readline");

const Const = require("./Const");
const CommonLib = require("./Lib");

let config = {};

/**
 * class for SmartClient runtime uninstallation
 */
class Uninstall {

    /**
     * uninstalls SmartClient runtime(s)
     */
    static async main() {
        // load persistent package configuration
        if (fs.existsSync(Const.SMARTCLIENT_CONF)) {
            config = fs.readJsonSync(Const.SMARTCLIENT_CONF);
        }

        let location = config.location;
        if (!location) return;

        // remove installed Framework from configured location
        let isomorphicPath = path.resolve("..", "..", location, Const.ISOMORPHIC_DIR);
        if (await CommonLib.prompt("Uninstalling SmartClient " + config.branch + ", build " +
                      config.date + " runtime(s) installed at " + isomorphicPath +
                      ".  Remove existing installation? [yes]: ", !config.prompt, "no"))
        {
            if (fs.existsSync(isomorphicPath)) {
                process.stdout.write("Removing SmartClient...");
                fs.removeSync(isomorphicPath);
                console.log("Done.");
            } else {
                console.log("Nothing to do as " + isomorphicPath + " doesn't exist!");
            }
        } else {
            console.log("Leaving the SmartClient runtime at " + isomorphicPath);
        }

        // remove SmartClient configuration file isc-cnofig.json
        if (await CommonLib.prompt("If you reinstall this module, keeping isc-config.json " +
                                   "will allow your previous configuration to persist.  " +
                                   "Keep isc-config.json? [yes]: ", !config.prompt, "yes"))
        {
            console.log("Keeping the SmartClient configuration file isc-config.json");

        } else {
            fs.removeSync(Const.SMARTCLIENT_CONF);
            console.log("Removed isc-config.json");
        }

    }

}

// Start uninstallation process
(async function () {
    Uninstall.main();
})();
